use std::fs;

type ParsedInput<'a> = &'a str;

fn parse_input(input: &str) -> ParsedInput{
    todo!()
}

fn part1(input: &ParsedInput) -> u32 {
    todo!()
}

fn part2(input: &ParsedInput) -> u32 {
    todo!()
}

fn main() {
    let input: String = fs::read_to_string("input/dayxx").expect("Failed to read input");

    let parsed_input = parse_input(&input);

    println!("Part 1: {}", part1(&parsed_input));
    println!("Part 2: {}", part2(&parsed_input));
}

#[cfg(test)]
mod tests {
    use super::*;
    const INPUT: &str = "";

    #[test]
    fn test_part1() {
        let parsed_input = parse_input(INPUT);
        assert_eq!(part1(&parsed_input), 0);
    }

    #[test]
    fn test_part2() {
        let parsed_input = parse_input(INPUT);
        assert_eq!(part1(&parsed_input), 0);
    }
}
